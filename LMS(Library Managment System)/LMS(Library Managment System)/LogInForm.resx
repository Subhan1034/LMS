<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEye.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAARCAYAAADKZhx3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vQAADr0BR/uQrQAAA4hJREFUSEutlFlIVGEUx++4jTMuM67j7miKJqbVkJiVlUT6YFIuEEUPUQTmQxCU
        gYSB+NCC0EsPQb20GETLQz4YEWE9BJFRCW1U0IZli6aFpXb7nXu/mcYuYmB/uHzf+Z/vnvM/53z3arPB
        5XKtj4mJWadMA/Hx8WXh4eHDeXl5SYr6/7Db7eciIiIeKtMAQmpZ9KSkpHkmY8Ltdq9EaIMy54bo6Ohm
        m832K7i6mRLThRs8vcr8N6B2AWqrlBlAdnZ2IYuOr95kNC0hIaFKxBQUFKQpSisvL3eEhoaOR0ZGtinK
        QHt7e4g8yrTC4XAcDAkJ+ZqTk+NRVABUuCsjIyO9uLjYowQuzs/Pr2xqaopQR0TMKhbpwjKTMUHcK4zr
        lDKtyMrKSiXxmNPpPKYojcChJKrjxe6wsLD3UHrww/mfzP8uwQ8lJyfXMZY2eQefAS7hGhbp1laTmQFR
        UVEdEoy28U58PfN6Aq2T9DktPErlWwiymgTL2dfB7UHUBVo8LOc4/5gYLdJ2iYeofp4HwWICSExM9BUV
        FUXL3ufzOePi4rYT8CKmzku3sat1XbeJX8ZAR9rgT8rqH4u0HEEb4K/K7BH6jk610IkeeBlBACUlJVGM
        ZYnGoQ8c6BYyPT09H/sZVX+LjY1t9icUeDyeYiobYhtotdjCi98PClmE8B620qn7jGCp6THHibg78CMa
        CXbC6VTWSaBByDdckIXm0T+gpX0s02YsD/xNVguIsZZYT+nAFN05kpKSUon9mhwfEbdCztj8rcXxigq8
        QgajsbHRIS1ka0ksfG1trZO9BTJr7kMXW+Msd+ARX0ee4eTHYJfyxUGLR1FTaTiCUFNTY8c3wdaSWHjx
        s7eAf4CXoq6xlbGM8nymE9WGk1t4GNWTtKIJAf0E+k7bNxrOINDSSyyWxPCXWadBhFBpK7HGSPaJi7YZ
        ESnEv0WuCS7cDvnNDZK8U17Izc11oVB+eToX7jiH3cILMjMz03hxgG0gKaMZEF78AnW7t8G/lBEQ44wk
        VG5DEPM+jf+LVlFRERN8e+WbQ+1+1P5A7RAH9/n/0ypwAwJaOdMotvAEn0+SDgK+xZRZXg++zX/BVlZW
        Fqv2VqSmphZS/XmUT8kcSdZHW7vgdtOhXewPwJ0l2QuOy6zH4bqZYYUZYY7wer3ZVL2XJL1SEV2YJIm0
        eYTnHvwJhGwqLS0NjGV2aNpvvvLiTJ1uUz0AAAAASUVORK5CYII=
</value>
  </data>
</root>